Starting FastAPI server on 0.0.0.0:8000...
INFO:     Started server process [22408]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
Registered handlers: [<class 'mcp.types.PingRequest'>, <class 'mcp.types.ListToolsRequest'>, <class 'mcp.types.CallToolRequest'>]
Checking handler: <class 'mcp.types.PingRequest'> (type: <class 'pydantic._internal._model_construction.ModelMetaclass'>)
Checking handler: <class 'mcp.types.ListToolsRequest'> (type: <class 'pydantic._internal._model_construction.ModelMetaclass'>)
Found ListToolsRequest handler, calling it...
Got result from MCP server: <class 'mcp.types.ServerResult'>
Result doesn't have tools attribute: root=ListToolsResult(meta=None, nextCursor=None, tools=[Tool(name='create_folder', title=None, description='Create a new folder at the specified location', inputSchema={'type': 'object', 'properties': {'path': {'type': 'string', 'description': 'Path where to create the folder'}, 'name': {'type': 'string', 'description': 'Name of the folder to create'}, 'parents': {'type': 'boolean', 'description': "Create parent directories if they don't exist", 'default': True}}, 'required': ['path', 'name']}, outputSchema=None, annotations=None, meta=None), Tool(name='create_file', title=None, description='Create a new file with optional initial content', inputSchema={'type': 'object', 'properties': {'path': {'type': 'string', 'description': 'Path where to create the file'}, 'name': {'type': 'string', 'description': 'Name of the file to create'}, 'content': {'type': 'string', 'description': 'Initial content of the file', 'default': ''}, 'overwrite': {'type': 'boolean', 'description': 'Overwrite if file exists', 'default': False}}, 'required': ['path', 'name']}, outputSchema=None, annotations=None, meta=None), Tool(name='read_file', title=None, description='Read the contents of a file', inputSchema={'type': 'object', 'properties': {'path': {'type': 'string', 'description': 'Path of the file to read'}}, 'required': ['path']}, outputSchema=None, annotations=None, meta=None), Tool(name='write_file', title=None, description='Write content to a file', inputSchema={'type': 'object', 'properties': {'path': {'type': 'string', 'description': 'Path of the file to write'}, 'content': {'type': 'string', 'description': 'Content to write to the file'}, 'append': {'type': 'boolean', 'description': 'Append to file instead of overwriting', 'default': False}}, 'required': ['path', 'content']}, outputSchema=None, annotations=None, meta=None), Tool(name='list_contents', title=None, description='List contents of a directory', inputSchema={'type': 'object', 'properties': {'path': {'type': 'string', 'description': 'Path of the directory to list'}, 'show_hidden': {'type': 'boolean', 'description': 'Show hidden files and folders', 'default': False}}, 'required': ['path']}, outputSchema=None, annotations=None, meta=None), Tool(name='delete', title=None, description='Delete a file or folder', inputSchema={'type': 'object', 'properties': {'path': {'type': 'string', 'description': 'Path of the file/folder to delete'}, 'recursive': {'type': 'boolean', 'description': 'Delete recursively for folders', 'default': False}}, 'required': ['path']}, outputSchema=None, annotations=None, meta=None), Tool(name='move', title=None, description='Move a file or folder to a new location', inputSchema={'type': 'object', 'properties': {'source_path': {'type': 'string', 'description': 'Current path of the file/folder'}, 'destination_path': {'type': 'string', 'description': 'Destination path'}, 'overwrite': {'type': 'boolean', 'description': 'Overwrite if destination exists', 'default': False}}, 'required': ['source_path', 'destination_path']}, outputSchema=None, annotations=None, meta=None), Tool(name='copy', title=None, description='Copy a file or folder to a new location', inputSchema={'type': 'object', 'properties': {'source_path': {'type': 'string', 'description': 'Source path to copy from'}, 'destination_path': {'type': 'string', 'description': 'Destination path to copy to'}, 'overwrite': {'type': 'boolean', 'description': 'Overwrite if destination exists', 'default': False}}, 'required': ['source_path', 'destination_path']}, outputSchema=None, annotations=None, meta=None), Tool(name='rename', title=None, description='Rename a file or folder', inputSchema={'type': 'object', 'properties': {'old_path': {'type': 'string', 'description': 'Current path of the file/folder'}, 'new_name': {'type': 'string', 'description': 'New name for the file/folder'}}, 'required': ['old_path', 'new_name']}, outputSchema=None, annotations=None, meta=None), Tool(name='scaffold_project', title=None, description='Scaffold a new project based on template and cursor rules', inputSchema={'type': 'object', 'properties': {'project_path': {'type': 'string', 'description': 'Path where to create the project'}, 'project_name': {'type': 'string', 'description': 'Name of the project'}, 'template_type': {'type': 'string', 'description': 'Type of project template (python, fastapi, react, etc.)'}, 'cursor_rules': {'type': 'string', 'description': 'Custom cursor rules for the project'}}, 'required': ['project_path', 'project_name', 'template_type']}, outputSchema=None, annotations=None, meta=None)])
INFO:     127.0.0.1:54905 - "GET /tools HTTP/1.1" 200 OK
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [22408]
